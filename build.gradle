group 'nlpcn.org'
version '5.0.0'

apply plugin: 'java'
apply plugin: 'war'
apply plugin: 'idea'

[compileJava, compileTestJava]*.options*.encoding = 'UTF-8'

sourceCompatibility = 1.8
targetCompatibility = 1.8

repositories {
    maven {
        url "http://maven.aliyun.com/nexus/content/groups/public/"
    }
    mavenCentral()
}

dependencies {

	compile 'org.nutz:nutz:1.r.63'
	compile 'com.alibaba:fastjson:1.2.28'
	compile 'com.h2database:h2:1.3.176'
	compile 'com.alibaba:druid:1.0.15'
	compile 'org.quartz-scheduler:quartz:2.2.1'
	compile 'javax.mail:mail:1.4.1'
	compile 'com.google.guava:guava:18.0'
	compile 'com.github.javaparser:javaparser-core:2.4.0'
	compile 'com.github.axet:kaptcha:0.0.9'
	compile 'org.jasypt:jasypt:1.9.2'
	compile 'org.apache.zookeeper:zookeeper:3.4.11'
	compile 'org.apache.curator:curator-framework:2.12.0'
	compile 'org.apache.curator:curator-recipes:2.12.0'

	//new version use log
	compile 'org.slf4j:log4j-over-slf4j:1.7.21'
	compile 'org.slf4j:slf4j-api:1.7.25'
	compile 'org.apache.logging.log4j:log4j-slf4j-impl:2.6.2'
	compile 'org.apache.logging.log4j:log4j-jcl:2.6.2'
	compile 'org.apache.logging.log4j:log4j-api:2.6.2'
	compile 'org.apache.logging.log4j:log4j-core:2.6.2'
	compile 'org.apache.logging.log4j:log4j-web:2.6.2'

	//javaee support
	compile 'javax.servlet:javax.servlet-api:3.1.0'
	compile 'javax.servlet:jstl:1.2'
	compile 'javax.inject:javax.inject:1'
	compile 'javax:javaee-api:7.0'
	compile 'io.netty:netty-all:4.1.2.Final'
	compile 'org.eclipse.jetty:jetty-servlet:9.2.2.v20140723'


	// web server
	providedCompile 'org.eclipse.jetty:jetty-webapp:9.2.2.v20140723'
	providedCompile 'org.eclipse.jetty:jetty-jsp:9.2.2.v20140723'
	providedCompile 'org.eclipse.jetty:jetty-continuation:9.2.2.v20140723'
	providedCompile 'org.eclipse.jetty.websocket:websocket-server:9.2.2.v20140723'
	providedCompile 'org.eclipse.jetty.websocket:javax-websocket-server-impl:9.2.2.v20140723'


	testCompile 'junit:junit:4.12'

	war{

		def configFile = file('src/main/resources/jcoder.properties') ;

		configFile.write("version="+version+"_"+new Date().format('yyyyMMddHHmm'));

		def schemaJarFile = project.configurations.providedCompile

		schemaJarFile.each{source ->
			from zipTree(source)
			exclude("**/*.SF")
		}

		from('build/classes/main/Bootstrap.class')
		manifest {
			attributes 'Implementation-Title': 'Jcoder Webserver', 'Implementation-Version': version,  'Main-Class':'Bootstrap'
		}


		classpath = classpath - sourceSets.main.output


		from (jar) {
			into 'WEB-INF/lib'
		}
	}



	tasks.withType(JavaCompile) {
		options.encoding = "UTF-8"
	}
}